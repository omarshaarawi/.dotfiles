#!/bin/bash

# Helper functions for session management
switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t "$1"
    else
        tmux switch-client -t "$1"
    fi
}

has_session() {
    tmux has-session -t="$1" 2>/dev/null
}

# Function to source additional tmux configuration if available
hydrate() {
    local session_name="$1"
    local project_dir="$2"

    if [ -f "$project_dir/.tmux-sessionizer" ]; then
        tmux send-keys -t "$session_name" "source $project_dir/.tmux-sessionizer" C-m
    elif [ -f "$HOME/.tmux-sessionizer" ]; then
        tmux send-keys -t "$session_name" "source $HOME/.tmux-sessionizer" C-m
    fi
}

# Select directory to create session for
if [[ $# -eq 1 ]]; then
    selected=$1
else
    # Add more paths here as needed
    selected=$(find ~/git ~/git/vessel ~/ -mindepth 1 -maxdepth 1 -type d | fzf)
fi

# Exit if no directory selected
if [[ -z $selected ]]; then
    exit 0
fi

# Create session name from directory name
selected_name=$(basename "$selected" | tr . _)

# Check if tmux is running
tmux_running=$(pgrep tmux 2>/dev/null)

# If tmux isn't running and we're not in a tmux session, create a new one
if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s "$selected_name" -c "$selected"
    hydrate "$selected_name" "$selected"
    exit 0
fi

# Create new detached session if it doesn't exist
if ! has_session "$selected_name"; then
    tmux new-session -ds "$selected_name" -c "$selected"
    hydrate "$selected_name" "$selected"
fi

# Switch to the session
switch_to "$selected_name"
